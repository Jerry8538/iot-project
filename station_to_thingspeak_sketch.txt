#include <Arduino.h>
#include <WiFi.h>
#include <HTTPClient.h>

#define TRIG_PIN1 5
#define ECHO_PIN1 18
#define TRIG_PIN2 19
#define ECHO_PIN2 21
#define SOUND_SPD 343

const char* ssid = "YOUR_SSID";
const char* password = "YOUR_PASSWORD";
const char* thingspeak_url = "http://api.thingspeak.com/update?api_key=YOUR_WRITE_API_KEY&field1=";
const unsigned long POST_INTERVAL = 15000; // Send data every 15 seconds
unsigned long lastPostTime = 0;

const int THRESHOLD = 30;
volatile int count = 0;

bool sensor1_triggered = false;
bool sensor2_triggered = false;
unsigned long sensor1_time = 0;
unsigned long sensor2_time = 0;
const unsigned long RESET_TIME = 3000;

double reads1() {
  digitalWrite(TRIG_PIN1, HIGH);
  delay(10);
  digitalWrite(TRIG_PIN1, LOW);
  return pulseIn(ECHO_PIN1, HIGH) * SOUND_SPD / 2 / 10000;
}

double reads2() {
  digitalWrite(TRIG_PIN2, HIGH);
  delay(10);
  digitalWrite(TRIG_PIN2, LOW);
  return pulseIn(ECHO_PIN2, HIGH) * SOUND_SPD / 2 / 10000;
}

void sendDataToThingSpeak() {
    if (millis() - lastPostTime >= POST_INTERVAL) {
        HTTPClient http;
        String url = String(thingspeak_url) + String(count);
        http.begin(url);
        int httpResponseCode = http.GET();
        if (httpResponseCode > 0) {
            Serial.println("Data sent to ThingSpeak: " + String(count));
        } else {
            Serial.println("Error sending data");
        }
        http.end();
        lastPostTime = millis();
    }
}

void checkSensors() {
  double distance1 = reads1();
  double distance2 = reads2();
  unsigned long current_time;

  if (distance1 < THRESHOLD) {
    sensor1_triggered = true;
    Serial.println("S1 first");
    current_time = millis();

    while (millis() - current_time < 1000) {
      distance2 = reads2();
      if (distance2 < THRESHOLD) {
        count++;
        Serial.println("Incremented Count: " + String(count));
        break;
      }
    }
    sensor1_triggered = false;
  } else if (distance2 < THRESHOLD) {
    sensor2_triggered = true;
    Serial.println("S2 first");
    current_time = millis();

    while (millis() - current_time < 1000) {
      distance1 = reads1();
      if (distance1 < THRESHOLD) {
        count--;
        Serial.println("Decremented Count: " + String(count));
        break;
      }
    }
    sensor2_triggered = false;
  }
}

void setup() {
  Serial.begin(9600);
  pinMode(TRIG_PIN1, OUTPUT);
  pinMode(ECHO_PIN1, INPUT);
  pinMode(TRIG_PIN2, OUTPUT);
  pinMode(ECHO_PIN2, INPUT);
  
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
      delay(1000);
      Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  checkSensors();
  sendDataToThingSpeak();
  delay(100);
}

